{"ast":null,"code":"var _jsxFileName = \"/media/shafiqulislamshawon/28e36917-54ed-4bc8-a268-a8b6ec95a33e/workfile/projects/codebase/frontend/src/components/EventList.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport { Card } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Pagination from \"./Pagination\";\nimport { Events } from \"../snippets/Events\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EventList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      employee: [],\n      error: null,\n      //\n      currentPage: 1,\n      postsPerPage: 5 //\n\n    };\n  }\n\n  fetchEmp() {\n    fetch(`http://localhost:8000/api/events`).then(response => response.json()).then(data => this.setState({\n      employee: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchEmp();\n  }\n\n  render() {\n    //\n    const {\n      currentPage,\n      postsPerPage,\n      employee,\n      isLoading\n    } = this.state;\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = employee.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNum => this.setState({\n      currentPage: pageNum\n    });\n\n    const nextPage = () => this.setState({\n      currentPage: currentPage + 1\n    });\n\n    const prevPage = () => this.setState({\n      currentPage: currentPage - 1\n    }); //\n\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"100px\",\n        marginBottom: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: [\"List of events! -\", /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"/createemp\",\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" NAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" LOCATION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" TIME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ACTION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Events, {\n              posts: currentPage,\n              isLoading: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            postsPerPage: postsPerPage,\n            totalPosts: posts.length,\n            paginate: paginate,\n            nextPage: nextPage,\n            prevPage: prevPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this);\n  }\n\n} //\n// constructor(props) {\n//     super(props);\n//     this.handleDelete = this.handleDelete.bind(this);\n// }\n//\n// handleDelete(id){\n//     axios.delete(`http://localhost:8000/employee/api/${id}/delete`)\n// }\n// <tbody>\n//     {!this.state.isLoading?this.state.employee.map((user)=>{\n//         return (\n//             <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.emplyee_name}</td>\n//                 <td>{user.employee_email}</td>\n//                 <td>{user.emplyee_name}</td>\n//                 <td><Button onClick={() => this.props.history.push(`/updateemp/${user.id}`)}>Update</Button>    <Button variant=\"danger\" onClick={()=>this.handleDelete(user.id)}>Delete</Button></td>\n//            </tr>\n//          )\n//          })\n//          :\n//           \"LODING\"\n//     }\n// </tbody>","map":{"version":3,"sources":["/media/shafiqulislamshawon/28e36917-54ed-4bc8-a268-a8b6ec95a33e/workfile/projects/codebase/frontend/src/components/EventList.js"],"names":["React","Component","Table","Container","Card","moment","Pagination","Events","EventList","constructor","props","state","isLoading","employee","error","currentPage","postsPerPage","fetchEmp","fetch","then","response","json","data","setState","catch","componentDidMount","render","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNum","nextPage","prevPage","marginLeft","marginRight","marginTop","marginBottom","posts","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport {Card} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Pagination from \"./Pagination\";\nimport {Events} from \"../snippets/Events\";\nexport default class EventList extends Component {\nstate = {\n    isLoading: true,\n    employee: [],\n    error: null,\n    //\n    currentPage: 1,\n    postsPerPage: 5\n//\n}\nconstructor(props) {\n    super(props);\n}\nfetchEmp() {\n    fetch(`http://localhost:8000/api/events`)\n        .then(response => response.json())\n        .then(data =>\n           this.setState({\n               employee: data,\n               isLoading: false,\n           })\n        )\n       .catch(error => this.setState({ error, isLoading: false }));\n}\ncomponentDidMount() {\n    this.fetchEmp();\n}\n\nrender() {\n    //\n     const { currentPage, postsPerPage, employee, isLoading } = this.state;\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = employee.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNum => this.setState({ currentPage: pageNum });\n\n    const nextPage = () => this.setState({ currentPage: currentPage + 1 });\n\n    const prevPage = () => this.setState({ currentPage: currentPage - 1 });\n    //\n    return (\n                    <Container style={{  marginLeft: \"auto\", marginRight: \"auto\" , marginTop: \"100px\", marginBottom: \"auto\"}}>\n\n        <Card>\n            <Card.Body>\n    <Card.Title>Events</Card.Title>\n    <Card.Subtitle className=\"mb-2 text-muted\">List of events! -\n            <Card.Link href=\"/createemp\">Create</Card.Link>\n        </Card.Subtitle>\n  </Card.Body>\n        <Table>\n           <tbody>\n            <tr>\n              <th> NAME</th>\n              <th> LOCATION</th>\n              <th> TIME</th>\n              <th>ACTION</th>\n            </tr>\n<Events posts={currentPage} isLoading={isLoading}/>\n\n           </tbody>\n        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} nextPage={nextPage} prevPage={prevPage} />\n\n        </Table>\n</Card>\n     </Container>\n\n    )\n  }\n}\n//\n// constructor(props) {\n//     super(props);\n//     this.handleDelete = this.handleDelete.bind(this);\n// }\n//\n// handleDelete(id){\n//     axios.delete(`http://localhost:8000/employee/api/${id}/delete`)\n// }\n// <tbody>\n//     {!this.state.isLoading?this.state.employee.map((user)=>{\n//         return (\n//             <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.emplyee_name}</td>\n//                 <td>{user.employee_email}</td>\n//                 <td>{user.emplyee_name}</td>\n//                 <td><Button onClick={() => this.props.history.push(`/updateemp/${user.id}`)}>Update</Button>    <Button variant=\"danger\" onClick={()=>this.handleDelete(user.id)}>Delete</Button></td>\n//            </tr>\n//          )\n//          })\n//          :\n//           \"LODING\"\n//     }\n// </tbody>"]},"metadata":{},"sourceType":"module"}