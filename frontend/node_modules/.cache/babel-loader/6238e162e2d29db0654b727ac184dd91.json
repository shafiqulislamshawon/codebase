{"ast":null,"code":"var _jsxFileName = \"/media/shafiqulislamshawon/28e36917-54ed-4bc8-a268-a8b6ec95a33e/workfile/projects/codebase/frontend/src/components/EventList.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport { Card } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EventList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoading: true,\n      data: [],\n      error: null\n    };\n  }\n\n  fetchEmp() {\n    fetch(`http://localhost:8000/api/events`).then(response => response.json()).then(data => this.setState({\n      data: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchEmp();\n  }\n\n  deleteData(id) {\n    fetch('http://127.0.0.1:8000/api/events/' + id + '/', {\n      method: 'DELETE',\n      body: JSON.stringify(this.state)\n    }).then(response => response).then(data => {\n      if (data) {\n        this.fetchData();\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"100px\",\n        marginBottom: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: [\"List of events! -\", /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"/event/create\",\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" NAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" LOCATION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" TIME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ACTION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), !this.state.isLoading ? this.state.data.map(user => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [moment(user.date).utc().format(\"MMM DD, YYYY- HH:mm:ss UTC\"), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"            \", /*#__PURE__*/_jsxDEV(Card.Link, {\n                    href: `/event/update/${user.id}`,\n                    style: {\n                      textDecoration: \"none\"\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n                    href: \"\",\n                    style: {\n                      textDecoration: \"none\"\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.deleteData(user.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, this);\n            }) : \"LOADING\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/media/shafiqulislamshawon/28e36917-54ed-4bc8-a268-a8b6ec95a33e/workfile/projects/codebase/frontend/src/components/EventList.js"],"names":["React","Component","Table","Container","Card","moment","EventList","state","isLoading","data","error","fetchEmp","fetch","then","response","json","setState","catch","componentDidMount","deleteData","id","method","body","JSON","stringify","fetchData","render","marginLeft","marginRight","marginTop","marginBottom","map","user","name","location","date","utc","format","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AACA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjDM,KADiD,GACzC;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADyC;AAAA;;AAOjDC,EAAAA,QAAQ,GAAG;AACPC,IAAAA,KAAK,CAAE,kCAAF,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUJ,IAAI,IACP,KAAKO,QAAL,CAAc;AACVP,MAAAA,IAAI,EAAEA,IADI;AAEVD,MAAAA,SAAS,EAAE;AAFD,KAAd,CAHP,EAQIS,KARJ,CAQUP,KAAK,IAAI,KAAKM,QAAL,CAAc;AAAEN,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CARnB;AASH;;AACDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,QAAL;AACH;;AACAQ,EAAAA,UAAU,CAACC,EAAD,EAAI;AACPR,IAAAA,KAAK,CAAC,sCAAoCQ,EAApC,GAAuC,GAAxC,EAA4C;AAC7CC,MAAAA,MAAM,EAAC,QADsC;AAE7CC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe,KAAKjB,KAApB;AAFwC,KAA5C,CAAL,CAICM,IAJD,CAIMC,QAAQ,IAAEA,QAJhB,EAKCD,IALD,CAKOJ,IAAD,IAAQ;AACV,UAAGA,IAAH,EAAQ;AACJ,aAAKgB,SAAL;AACH;AACJ,KATD;AASI;;AAEZC,EAAAA,MAAM,GAAG;AACL,wBACgB,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAGC,QAAAA,UAAU,EAAE,MAAf;AAAuBC,QAAAA,WAAW,EAAE,MAApC;AAA6CC,QAAAA,SAAS,EAAE,OAAxD;AAAiEC,QAAAA,YAAY,EAAE;AAA/E,OAAlB;AAAA,6BAEZ,QAAC,IAAD;AAAA,gCACI,QAAC,IAAD,CAAM,IAAN;AAAA,kCACR,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADQ,eAER,QAAC,IAAD,CAAM,QAAN;AAAe,YAAA,SAAS,EAAC,iBAAzB;AAAA,yDACQ,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,IAAI,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOA,QAAC,KAAD;AAAA,iCACG;AAAA,oCACC;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAQI,CAAC,KAAKvB,KAAL,CAAWC,SAAZ,GAAsB,KAAKD,KAAL,CAAWE,IAAX,CAAgBsB,GAAhB,CAAqBC,IAAD,IAAQ;AACnD,kCAAQ;AAAA,wCACA;AAAA,4BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA;AAAA,4BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,wBAFA,eAGA;AAAA,6BAAK7B,MAAM,CAAC2B,IAAI,CAACG,IAAN,CAAN,CAAkBC,GAAlB,GAAwBC,MAAxB,CAA+B,4BAA/B,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHA,eAIA;AAAA,0DAAgB,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,IAAI,EAAI,iBAAgBL,IAAI,CAACZ,EAAG,EAA3C;AAA+C,oBAAA,KAAK,EAAE;AAACkB,sBAAAA,cAAc,EAAE;AAAjB,qBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAhB,eACV,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,IAAI,EAAC,EAAhB;AAAmB,oBAAA,KAAK,EAAE;AAACA,sBAAAA,cAAc,EAAE;AAAjB,qBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADU,eAEK;AAAQ,oBAAA,OAAO,EAAE,MAAI,KAAKnB,UAAL,CAAgBa,IAAI,CAACZ,EAArB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJA;AAAA,iBAASY,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA,sBAAR;AAUC,aAXsB,CAAtB,GAaE,SArBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFY;AAAA;AAAA;AAAA;AAAA,YADhB;AAwCD;;AA1E8C","sourcesContent":["import React, { Component } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport {Card} from \"react-bootstrap\";\nimport moment from \"moment\";\nexport default class EventList extends Component {\nstate = {\n    isLoading: true,\n    data: [],\n    error: null\n}\n\nfetchEmp() {\n    fetch(`http://localhost:8000/api/events`)\n        .then(response => response.json())\n        .then(data =>\n           this.setState({\n               data: data,\n               isLoading: false,\n           })\n        )\n       .catch(error => this.setState({ error, isLoading: false }));\n}\ncomponentDidMount() {\n    this.fetchEmp();\n}\n deleteData(id){\n        fetch('http://127.0.0.1:8000/api/events/'+id+'/',{\n            method:'DELETE',\n            body:JSON.stringify(this.state),\n        })\n        .then(response=>response)\n        .then((data)=>{\n            if(data){\n                this.fetchData();\n            }\n        });}\n\nrender() {\n    return (\n                    <Container style={{  marginLeft: \"auto\", marginRight: \"auto\" , marginTop: \"100px\", marginBottom: \"auto\"}}>\n\n        <Card>\n            <Card.Body>\n    <Card.Title>Events</Card.Title>\n    <Card.Subtitle className=\"mb-2 text-muted\">List of events! -\n            <Card.Link href=\"/event/create\">Create</Card.Link>\n        </Card.Subtitle>\n  </Card.Body>\n        <Table>\n           <tbody>\n            <tr>\n              <th> NAME</th>\n              <th> LOCATION</th>\n              <th> TIME</th>\n              <th>ACTION</th>\n            </tr>\n\n              {!this.state.isLoading?this.state.data.map((user)=>{\n              return (<tr key={user.id}>\n                      <td>{user.name}</td>\n                      <td>{user.location}</td>\n                      <td>{moment(user.date).utc().format(\"MMM DD, YYYY- HH:mm:ss UTC\")} </td>\n                      <td>            <Card.Link href={(`/event/update/${user.id}`)} style={{textDecoration: \"none\"}}>Edit</Card.Link>\n            <Card.Link href=\"\" style={{textDecoration: \"none\"}}>Delete</Card.Link>\n                           <button onClick={()=>this.deleteData(user.id)} >Delete</button>\n\n                      </td></tr>\n              )\n              })\n              :\n                 \"LOADING\"\n              }\n           </tbody>\n        </Table>\n</Card>\n     </Container>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}